generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model raw_constant_violations {
  id             Int       @id @default(autoincrement())
  event_id       Int
  field_name     String    @db.VarChar(255)
  expected_value String    @db.Text
  actual_value   String    @db.Text
  violation_time DateTime? @default(now()) @db.Timestamp(0)

  @@index([event_id], map: "idx_event_id")
  @@index([field_name], map: "idx_field_name")
  @@index([violation_time], map: "idx_violation_time")
}

model raw_events {
  id                      Int       @id
  version_number          Int       @default(1)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  updated_at              DateTime? @default(now()) @db.Timestamp(0)
  last_checked            DateTime? @default(now()) @db.Timestamp(0)
  no_longer_found_at      DateTime? @db.Timestamp(0)

  event_name              String    @db.VarChar(512)
  event_start             String    @db.VarChar(19)
  event_end               String    @db.VarChar(19)
  gmt_start               String    @db.VarChar(19)
  gmt_end                 String    @db.VarChar(19)
  time_booking_start      String    @db.VarChar(19)
  time_booking_end        String    @db.VarChar(19)
  is_all_day_event        Boolean
  timezone_abbreviation   String    @db.VarChar(255)
  building                String    @db.VarChar(255)
  building_id             Int
  room                    String    @db.VarChar(255)
  room_id                 Int
  room_code               String    @db.VarChar(255)
  room_type               String    @db.VarChar(255)
  room_type_id            Int
  location                String    @db.VarChar(255)
  location_link           String    @db.VarChar(255)
  group_name              String    @db.VarChar(255)
  reservation_id          Int
  reservation_summary_url String    @db.VarChar(255)
  status_id               Int
  status_type_id          Int
  web_user_is_owner       Boolean
  
  roomRel                 rel_rooms      @relation(fields: [room_id], references: [room_id])
  buildingRel             rel_buildings  @relation(fields: [building_id], references: [building_id])
  roomTypeRel             rel_room_types @relation(fields: [room_type_id], references: [room_type_id])

  @@index([building_id], map: "idx_building_id")
  @@index([event_start, event_end], map: "idx_date_range")
  @@index([event_end], map: "idx_event_end")
  @@index([event_start], map: "idx_event_start")
  @@index([group_name], map: "idx_group_name")
  @@index([building, room], map: "idx_location_search")
  @@index([reservation_id], map: "idx_reservation_id")
  @@index([room_id], map: "idx_room_id")
}

model raw_events_history {
  id                      Int       @id @default(autoincrement())
  event_id                Int
  version_number          Int
  archived_at             DateTime  @default(now()) @db.Timestamp(0)
  last_checked            DateTime  @db.Timestamp(0)
  change_count            Int       @default(0)

  // All the original event fields (snapshot of the data before change)
  event_name              String    @db.VarChar(512)
  event_start             String    @db.VarChar(19)
  event_end               String    @db.VarChar(19)
  gmt_start               String    @db.VarChar(19)
  gmt_end                 String    @db.VarChar(19)
  time_booking_start      String    @db.VarChar(19)
  time_booking_end        String    @db.VarChar(19)
  is_all_day_event        Boolean
  timezone_abbreviation   String    @db.VarChar(255)
  building                String    @db.VarChar(255)
  building_id             Int
  room                    String    @db.VarChar(255)
  room_id                 Int
  room_code               String    @db.VarChar(255)
  room_type               String    @db.VarChar(255)
  room_type_id            Int
  location                String    @db.VarChar(255)
  location_link           String    @db.VarChar(255)
  group_name              String    @db.VarChar(255)
  reservation_id          Int
  reservation_summary_url String    @db.VarChar(255)
  status_id               Int
  status_type_id          Int
  web_user_is_owner       Boolean

  @@index([event_id], map: "idx_history_event_id")
  @@index([event_id, version_number], map: "idx_history_event_version")
  @@index([archived_at], map: "idx_history_archived_at")
  @@unique([event_id, version_number], map: "uk_event_version")
}

model api_tokens {
  id         Int       @id @default(autoincrement())
  token      String    @unique @db.VarChar(255)
  is_admin   Boolean   @default(false)
  comment    String    @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  last_used  DateTime? @db.Timestamp(0)

  @@index([token], map: "idx_token")
}

model scraper_state {
  id           Int      @id @default(autoincrement())
  scraper_type String   @unique @db.VarChar(50)
  current_date DateTime @db.Date
  enabled      Boolean  @default(false)
  updated_at   DateTime @default(now()) @db.Timestamp(0)

  @@index([scraper_type], map: "idx_scraper_type")
}

model rel_rooms {
  room_id       Int         @id
  room_name     String      @db.VarChar(255)
  building_id   Int
  room_type_id  Int
  
  rawEventsRel  raw_events[]
  buildingRel   rel_buildings  @relation(fields: [building_id], references: [building_id])
  roomTypeRel   rel_room_types @relation(fields: [room_type_id], references: [room_type_id])

  @@index([building_id], map: "idx_rooms_building_id")
  @@index([room_type_id], map: "idx_rooms_room_type_id")
}

model rel_buildings {
  building_id   Int         @id
  building_name String      @db.VarChar(255)
  
  rawEventsRel  raw_events[]
  roomsRel      rel_rooms[]
}

model rel_room_types {
  room_type_id   Int         @id
  room_type_name String      @db.VarChar(255)
  
  rawEventsRel   raw_events[]
  roomsRel       rel_rooms[]
}
